{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","App.tsx","components/peerList.tsx","components/messages.tsx","serviceWorker.ts","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","node","PeerList","state","React","useContext","GlobalContext","peers","peer","key","Messages","messages","message","Date","now","libp2p","require","WS","wrtc","NOISE","PeerID","options","modules","transport","connEncryption","streamMuxer","addresses","listen","initialState","createContext","reducer","action","console","log","type","filter","peerId","length","newPeers","push","newMessages","App","useReducer","dispatch","useState","connected","setStatus","setConnecting","showToast","setToaster","toastMessage","setMessage","toastColor","setColor","startup","a","createFromJSON","nodeId","create","connectionManager","on","connection","remotePeer","toB58String","handle","stream","receive","start","pipe","source","toString","replace","useEffect","value","Provider","path","component","exact","render","to","slot","tab","href","onClick","isOpen","onDidDismiss","color","animated","duration","position","className","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yyCAAA,IAAIA,EAAM,CACT,8BAA+B,CAC9B,IACA,GAED,uBAAwB,CACvB,IACA,GAED,uBAAwB,CACvB,IACA,GAED,0BAA2B,CAC1B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,wBAAyB,CACxB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,sBAAuB,CACtB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,mCAAoC,CACnC,IACA,IAED,uBAAwB,CACvB,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,wBAAyB,CACxB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,uBAAwB,CACvB,IACA,GAED,uBAAwB,CACvB,IACA,IAED,yBAA0B,CACzB,IACA,GAED,8BAA+B,CAC9B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,gCAAiC,CAChC,IACA,KAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7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","file":"static/js/main.5d2b06f9.chunk.js","sourcesContent":["var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t646,\n\t\t5\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t647,\n\t\t6\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t648,\n\t\t7\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t649,\n\t\t18\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t650,\n\t\t19\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t651,\n\t\t43\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t652,\n\t\t20\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t653,\n\t\t21\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t654,\n\t\t22\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t655,\n\t\t23\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t656,\n\t\t44\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t657,\n\t\t10\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t658,\n\t\t24\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t659,\n\t\t45\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t660,\n\t\t46\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t661,\n\t\t25\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t662,\n\t\t26\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t663,\n\t\t27\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t664,\n\t\t28\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t665,\n\t\t29\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t666,\n\t\t8\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t667,\n\t\t15\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t668,\n\t\t9\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t669,\n\t\t30\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t670,\n\t\t31\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t671,\n\t\t32\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t672,\n\t\t11\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t673,\n\t\t17\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t674,\n\t\t47\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t675,\n\t\t33\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t676,\n\t\t34\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t677,\n\t\t35\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t678,\n\t\t36\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t679,\n\t\t48\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t680,\n\t\t13\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t681,\n\t\t49\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t682,\n\t\t37\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t683,\n\t\t16\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t684,\n\t\t38\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t685,\n\t\t39\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t686,\n\t\t40\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t687,\n\t\t12\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t688,\n\t\t50\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 285;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t692,\n\t\t57\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 287;\nmodule.exports = webpackAsyncContext;","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { IonApp, IonLabel, IonRouterOutlet, IonTabBar, IonTabButton, IonTabs, IonToast } from '@ionic/react';\nimport { IonReactRouter } from '@ionic/react-router';\nimport { BiNetworkChart, BiRefresh } from 'react-icons/bi'\nimport { TiMessages } from 'react-icons/ti'\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/display.css';\n\n/* Theme variables */\nimport './theme/variables.css';\nimport './theme/loader.css';\n\n/* Background services */\nimport pipe from 'it-pipe'\n\n/* Local imports */\nimport id from './assets/nodeId.json'\nimport PeerList from './components/peerList';\nimport Messages from './components/messages'\n\n/* Legacy imports */\nconst PROTOCOL = '/libp2p/chat/1.0.0'\nconst libp2p = require('libp2p')\nconst WS = require('libp2p-websockets')\nconst wrtc = require('libp2p-webrtc-star')\nconst { NOISE } = require('libp2p-noise')\nconst PeerID = require('peer-id')\nconst mplex = require('libp2p-mplex')\n\nconst options: any = {\n  modules: {\n    transport: [WS, wrtc],\n    connEncryption: [NOISE],\n    streamMuxer: [mplex],\n  },\n  addresses: {\n    listen: ['/ip4/192.168.1.194/tcp/13579/wss/p2p-webrtc-star',\n    '/dns4/wrtc-star1.par.dwebops.pub/tcp/443/wss/p2p-webrtc-star',\n    '/dns4/wrtc-star2.sjc.dwebops.pub/tcp/443/wss/p2p-webrtc-star'],\n  }\n}\n\ninterface IContextProps {\n  state: globalState;\n  dispatch: ({ type }: { type: string }) => void;\n}\n\ntype globalState = {\n  peers: string[],\n  messages: string[]\n}\n\nconst initialState = {\n  peers: [],\n  messages: []\n}\n\nexport const GlobalContext = React.createContext({} as IContextProps)\n\nconst reducer = (state: globalState, action: any): globalState => {\n  console.log(state)\n  console.log(action)\n  switch (action.type) {\n    case 'ADD_PEER': {\n      if (state.peers.filter((peer) => peer === action.peerId).length > 0)\n        return state;\n      let newPeers = [...state.peers]\n      newPeers.push(action.peerId)\n      return { ...state, peers: newPeers }\n    }\n    case 'ADD_MESSAGE': {\n      let newMessages = [...state.messages]\n      newMessages.push(action.message)\n      return { ...state, messages: newMessages }\n    }\n    default:\n      return state;\n  }\n}\n\n\n\nvar node: any\n\nconst App: React.FC = () => {\n\n  const [state, dispatch] = React.useReducer(reducer, initialState)\n  const [connected, setStatus] = React.useState(false)\n  const [connecting, setConnecting] = React.useState(false)\n  const [showToast, setToaster] = React.useState(false)\n  const [toastMessage, setMessage] = React.useState('')\n  const [toastColor, setColor] = React.useState('')\n  const startup = async () => {\n    setConnecting(true)\n    let nodeId: any = await PeerID.createFromJSON(id)\n    options.peerId = nodeId\n    node = await libp2p.create(options)\n    node.connectionManager.on('peer:connect', (connection: any) => {\n      console.log('connected to: ', connection.remotePeer.toB58String())\n      dispatch({ type: 'ADD_PEER', peerId: connection.remotePeer.toB58String() })\n    })\n\n    await node.handle(PROTOCOL, async ({ stream }: any) => {\n      console.log('Connected to someone!')\n      receive(stream)\n    })\n    try {\n      await node.start();\n      setMessage('Node started')\n      setColor('success')\n      setToaster(true)\n      setStatus(true)\n      setConnecting(false)\n    }\n    catch (err) {\n      console.log(err)\n      setMessage('Could not start node.  Retrying')\n      setColor('warning')\n      setToaster(true)\n    }\n\n  }\n\n  function receive(stream: any) {\n    pipe(\n      // Read from the stream (the source)\n      stream.source,\n      // Sink function\n      async function (source) {\n        // For each chunk of data\n        for await (const msg of source) {\n          // Output the data as a utf8 string\n          dispatch({ type: 'ADD_MESSAGE', message: msg.toString('utf8').replace('\\n', '') })\n        }\n      }\n    )\n  }\n\n  React.useEffect(() => {\n    startup()\n  },[])\n\n  const value = { state, dispatch }\n  return (\n    <GlobalContext.Provider value={value}>\n      <IonApp>\n      <IonReactRouter>\n        <IonTabs>\n            <IonRouterOutlet>\n              <Route path=\"/peers\" component={PeerList} exact={true} />\n              <Route path=\"/messages\" component={Messages} exact={true} />\n              <Route exact path=\"/\" render={() => <Redirect to=\"/peers\" />} />\n            </IonRouterOutlet>\n            <IonTabBar slot=\"bottom\">\n              <IonTabButton tab=\"tab1\" href=\"/peers\">\n                <BiNetworkChart />\n                <IonLabel>Peers</IonLabel>\n              </IonTabButton>\n              <IonTabButton tab=\"tab2\" href=\"/messages\">\n                <TiMessages />\n                <IonLabel>Messages</IonLabel>\n              </IonTabButton>\n              <IonTabButton onClick={() => startup()}>\n                <BiRefresh />\n                <IonLabel>Reconnect</IonLabel>\n              </IonTabButton>\n            </IonTabBar>\n\n          <IonToast\n            isOpen={showToast}\n            onDidDismiss={() => setToaster(false)}\n            message={toastMessage}\n            color={toastColor}\n            animated\n            duration={3000}\n            position=\"top\"\n          />\n        </IonTabs>\n        </IonReactRouter>\n        {!connected && <div className=\"lds-ripple\"><div></div><div></div></div>}\n      </IonApp>\n    </GlobalContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { IonList, IonItem, IonLabel, IonHeader, IonContent, IonTitle, IonToolbar } from '@ionic/react';\nimport { GlobalContext } from '../App'\n\nconst PeerList = () => {\n    const state = React.useContext(GlobalContext)\n    return (\n        <IonContent>\n            <IonToolbar>\n                <IonTitle>Peers</IonTitle>\n            </IonToolbar>\n            <IonList>\n                {state.state.peers.map((peer: string) => {\n                    return <IonItem key={peer}><IonLabel key={peer + '1'}>Peer ID: {peer}</IonLabel></IonItem>\n                })}\n            </IonList>\n        </IonContent>\n    )\n}\n\nexport default PeerList","import React from 'react';\nimport { IonList, IonItem, IonLabel, IonContent, IonTitle, IonToolbar } from '@ionic/react';\nimport { GlobalContext } from '../App'\n\nconst Messages = () => {\n    const state = React.useContext(GlobalContext)\n    return (\n    <IonContent>\n        <IonToolbar>\n            <IonTitle>Messages</IonTitle>\n        </IonToolbar>\n        <IonList>\n            {state.state.messages.map((message: string) => {\n                return <IonItem key={message+Date.now()}><IonLabel key={message+Date.now()+'1'}>Message: {message}</IonLabel></IonItem>\n            })}\n        </IonList>\n    </IonContent>\n    )\n}\n\nexport default Messages","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}